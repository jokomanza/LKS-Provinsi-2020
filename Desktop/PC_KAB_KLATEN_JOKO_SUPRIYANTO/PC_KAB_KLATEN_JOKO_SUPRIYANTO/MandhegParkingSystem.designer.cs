#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PC_KAB_KLATEN_JOKO_SUPRIYANTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;


    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name = "MandhegParkingSystem")]
    public partial class MandhegParkingSystemDataContext : System.Data.Linq.DataContext, IMandhegParkingSystemDataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertEmployee(Employee instance);
        partial void UpdateEmployee(Employee instance);
        partial void DeleteEmployee(Employee instance);
        partial void InsertVehicleType(VehicleType instance);
        partial void UpdateVehicleType(VehicleType instance);
        partial void DeleteVehicleType(VehicleType instance);
        partial void InsertHourlyRate(HourlyRate instance);
        partial void UpdateHourlyRate(HourlyRate instance);
        partial void DeleteHourlyRate(HourlyRate instance);
        partial void InsertMember(Member instance);
        partial void UpdateMember(Member instance);
        partial void DeleteMember(Member instance);
        partial void InsertMembership(Membership instance);
        partial void UpdateMembership(Membership instance);
        partial void DeleteMembership(Membership instance);
        partial void InsertParkingData(ParkingData instance);
        partial void UpdateParkingData(ParkingData instance);
        partial void DeleteParkingData(ParkingData instance);
        partial void InsertVehicle(Vehicle instance);
        partial void UpdateVehicle(Vehicle instance);
        partial void DeleteVehicle(Vehicle instance);
        #endregion

        public MandhegParkingSystemDataContext() :
                base(global::PC_KAB_KLATEN_JOKO_SUPRIYANTO.Properties.Settings.Default.MandhegParkingSystemConnectionString, mappingSource)
        {
            OnCreated();
        }

        public MandhegParkingSystemDataContext(string connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public MandhegParkingSystemDataContext(System.Data.IDbConnection connection) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public MandhegParkingSystemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public MandhegParkingSystemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
                base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<Employee> Employees
        {
            get
            {
                return this.GetTable<Employee>();
            }
        }

        public System.Data.Linq.Table<VehicleType> VehicleTypes
        {
            get
            {
                return this.GetTable<VehicleType>();
            }
        }

        public System.Data.Linq.Table<HourlyRate> HourlyRates
        {
            get
            {
                return this.GetTable<HourlyRate>();
            }
        }

        public System.Data.Linq.Table<Member> Members
        {
            get
            {
                return this.GetTable<Member>();
            }
        }

        public System.Data.Linq.Table<Membership> Memberships
        {
            get
            {
                return this.GetTable<Membership>();
            }
        }

        public System.Data.Linq.Table<ParkingData> ParkingDatas
        {
            get
            {
                return this.GetTable<ParkingData>();
            }
        }

        public System.Data.Linq.Table<Vehicle> Vehicles
        {
            get
            {
                return this.GetTable<Vehicle>();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _email;
		
		private string _password;
		
		private string _phone_number;
		
		private string _address;
		
		private System.DateTime _date_of_birth;
		
		private string _gender;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<ParkingData> _ParkingDatas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Ondate_of_birthChanging(System.DateTime value);
    partial void Ondate_of_birthChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public Employee()
		{
			this._ParkingDatas = new EntitySet<ParkingData>(new Action<ParkingData>(this.attach_ParkingDatas), new Action<ParkingData>(this.detach_ParkingDatas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_birth", DbType="Date NOT NULL")]
		public System.DateTime date_of_birth
		{
			get
			{
				return this._date_of_birth;
			}
			set
			{
				if ((this._date_of_birth != value))
				{
					this.Ondate_of_birthChanging(value);
					this.SendPropertyChanging();
					this._date_of_birth = value;
					this.SendPropertyChanged("date_of_birth");
					this.Ondate_of_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ParkingData", Storage="_ParkingDatas", ThisKey="id", OtherKey="employee_id")]
		public EntitySet<ParkingData> ParkingDatas
		{
			get
			{
				return this._ParkingDatas;
			}
			set
			{
				this._ParkingDatas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ParkingDatas(ParkingData entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_ParkingDatas(ParkingData entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleType")]
	public partial class VehicleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<HourlyRate> _HourlyRates;
		
		private EntitySet<Vehicle> _Vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public VehicleType()
		{
			this._HourlyRates = new EntitySet<HourlyRate>(new Action<HourlyRate>(this.attach_HourlyRates), new Action<HourlyRate>(this.detach_HourlyRates));
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleType_HourlyRate", Storage="_HourlyRates", ThisKey="id", OtherKey="vehicle_type_id")]
		public EntitySet<HourlyRate> HourlyRates
		{
			get
			{
				return this._HourlyRates;
			}
			set
			{
				this._HourlyRates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleType_Vehicle", Storage="_Vehicles", ThisKey="id", OtherKey="vehicle_type_id")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HourlyRates(HourlyRate entity)
		{
			this.SendPropertyChanging();
			entity.VehicleType = this;
		}
		
		private void detach_HourlyRates(HourlyRate entity)
		{
			this.SendPropertyChanging();
			entity.VehicleType = null;
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.VehicleType = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.VehicleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HourlyRates")]
	public partial class HourlyRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _membership_id;
		
		private int _vehicle_type_id;
		
		private decimal _value;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<ParkingData> _ParkingDatas;
		
		private EntityRef<VehicleType> _VehicleType;
		
		private EntityRef<Membership> _Membership;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onmembership_idChanging(int value);
    partial void Onmembership_idChanged();
    partial void Onvehicle_type_idChanging(int value);
    partial void Onvehicle_type_idChanged();
    partial void OnvalueChanging(decimal value);
    partial void OnvalueChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public HourlyRate()
		{
			this._ParkingDatas = new EntitySet<ParkingData>(new Action<ParkingData>(this.attach_ParkingDatas), new Action<ParkingData>(this.detach_ParkingDatas));
			this._VehicleType = default(EntityRef<VehicleType>);
			this._Membership = default(EntityRef<Membership>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_membership_id", DbType="Int NOT NULL")]
		public int membership_id
		{
			get
			{
				return this._membership_id;
			}
			set
			{
				if ((this._membership_id != value))
				{
					if (this._Membership.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmembership_idChanging(value);
					this.SendPropertyChanging();
					this._membership_id = value;
					this.SendPropertyChanged("membership_id");
					this.Onmembership_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_type_id", DbType="Int NOT NULL")]
		public int vehicle_type_id
		{
			get
			{
				return this._vehicle_type_id;
			}
			set
			{
				if ((this._vehicle_type_id != value))
				{
					if (this._VehicleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvehicle_type_idChanging(value);
					this.SendPropertyChanging();
					this._vehicle_type_id = value;
					this.SendPropertyChanged("vehicle_type_id");
					this.Onvehicle_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Decimal(10,2) NOT NULL")]
		public decimal value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HourlyRate_ParkingData", Storage="_ParkingDatas", ThisKey="id", OtherKey="hourly_rates_id")]
		public EntitySet<ParkingData> ParkingDatas
		{
			get
			{
				return this._ParkingDatas;
			}
			set
			{
				this._ParkingDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleType_HourlyRate", Storage="_VehicleType", ThisKey="vehicle_type_id", OtherKey="id", IsForeignKey=true)]
		public VehicleType VehicleType
		{
			get
			{
				return this._VehicleType.Entity;
			}
			set
			{
				VehicleType previousValue = this._VehicleType.Entity;
				if (((previousValue != value) 
							|| (this._VehicleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleType.Entity = null;
						previousValue.HourlyRates.Remove(this);
					}
					this._VehicleType.Entity = value;
					if ((value != null))
					{
						value.HourlyRates.Add(this);
						this._vehicle_type_id = value.id;
					}
					else
					{
						this._vehicle_type_id = default(int);
					}
					this.SendPropertyChanged("VehicleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_HourlyRate", Storage="_Membership", ThisKey="membership_id", OtherKey="id", IsForeignKey=true)]
		public Membership Membership
		{
			get
			{
				return this._Membership.Entity;
			}
			set
			{
				Membership previousValue = this._Membership.Entity;
				if (((previousValue != value) 
							|| (this._Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Membership.Entity = null;
						previousValue.HourlyRates.Remove(this);
					}
					this._Membership.Entity = value;
					if ((value != null))
					{
						value.HourlyRates.Add(this);
						this._membership_id = value.id;
					}
					else
					{
						this._membership_id = default(int);
					}
					this.SendPropertyChanged("Membership");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ParkingDatas(ParkingData entity)
		{
			this.SendPropertyChanging();
			entity.HourlyRate = this;
		}
		
		private void detach_ParkingDatas(ParkingData entity)
		{
			this.SendPropertyChanging();
			entity.HourlyRate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _membership_id;
		
		private string _name;
		
		private string _email;
		
		private string _phone_number;
		
		private string _address;
		
		private System.DateTime _date_of_birth;
		
		private string _gender;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<Vehicle> _Vehicles;
		
		private EntityRef<Membership> _Membership;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onmembership_idChanging(int value);
    partial void Onmembership_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Ondate_of_birthChanging(System.DateTime value);
    partial void Ondate_of_birthChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public Member()
		{
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			this._Membership = default(EntityRef<Membership>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_membership_id", DbType="Int NOT NULL")]
		public int membership_id
		{
			get
			{
				return this._membership_id;
			}
			set
			{
				if ((this._membership_id != value))
				{
					if (this._Membership.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmembership_idChanging(value);
					this.SendPropertyChanging();
					this._membership_id = value;
					this.SendPropertyChanged("membership_id");
					this.Onmembership_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_birth", DbType="Date NOT NULL")]
		public System.DateTime date_of_birth
		{
			get
			{
				return this._date_of_birth;
			}
			set
			{
				if ((this._date_of_birth != value))
				{
					this.Ondate_of_birthChanging(value);
					this.SendPropertyChanging();
					this._date_of_birth = value;
					this.SendPropertyChanged("date_of_birth");
					this.Ondate_of_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Vehicle", Storage="_Vehicles", ThisKey="id", OtherKey="member_id")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_Member", Storage="_Membership", ThisKey="membership_id", OtherKey="id", IsForeignKey=true)]
		public Membership Membership
		{
			get
			{
				return this._Membership.Entity;
			}
			set
			{
				Membership previousValue = this._Membership.Entity;
				if (((previousValue != value) 
							|| (this._Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Membership.Entity = null;
						previousValue.Members.Remove(this);
					}
					this._Membership.Entity = value;
					if ((value != null))
					{
						value.Members.Add(this);
						this._membership_id = value.id;
					}
					else
					{
						this._membership_id = default(int);
					}
					this.SendPropertyChanged("Membership");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Membership")]
	public partial class Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<HourlyRate> _HourlyRates;
		
		private EntitySet<Member> _Members;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public Membership()
		{
			this._HourlyRates = new EntitySet<HourlyRate>(new Action<HourlyRate>(this.attach_HourlyRates), new Action<HourlyRate>(this.detach_HourlyRates));
			this._Members = new EntitySet<Member>(new Action<Member>(this.attach_Members), new Action<Member>(this.detach_Members));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_HourlyRate", Storage="_HourlyRates", ThisKey="id", OtherKey="membership_id")]
		public EntitySet<HourlyRate> HourlyRates
		{
			get
			{
				return this._HourlyRates;
			}
			set
			{
				this._HourlyRates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Membership_Member", Storage="_Members", ThisKey="id", OtherKey="membership_id")]
		public EntitySet<Member> Members
		{
			get
			{
				return this._Members;
			}
			set
			{
				this._Members.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HourlyRates(HourlyRate entity)
		{
			this.SendPropertyChanging();
			entity.Membership = this;
		}
		
		private void detach_HourlyRates(HourlyRate entity)
		{
			this.SendPropertyChanging();
			entity.Membership = null;
		}
		
		private void attach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.Membership = this;
		}
		
		private void detach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.Membership = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParkingData")]
	public partial class ParkingData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _license_plate;
		
		private System.Nullable<int> _vehicle_id;
		
		private int _employee_id;
		
		private int _hourly_rates_id;
		
		private System.DateTime _datetime_in;
		
		private System.DateTime _datetime_out;
		
		private decimal _amount_to_pay;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<HourlyRate> _HourlyRate;
		
		private EntityRef<Vehicle> _Vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onlicense_plateChanging(string value);
    partial void Onlicense_plateChanged();
    partial void Onvehicle_idChanging(System.Nullable<int> value);
    partial void Onvehicle_idChanged();
    partial void Onemployee_idChanging(int value);
    partial void Onemployee_idChanged();
    partial void Onhourly_rates_idChanging(int value);
    partial void Onhourly_rates_idChanged();
    partial void Ondatetime_inChanging(System.DateTime value);
    partial void Ondatetime_inChanged();
    partial void Ondatetime_outChanging(System.DateTime value);
    partial void Ondatetime_outChanged();
    partial void Onamount_to_payChanging(decimal value);
    partial void Onamount_to_payChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public ParkingData()
		{
			this._Employee = default(EntityRef<Employee>);
			this._HourlyRate = default(EntityRef<HourlyRate>);
			this._Vehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_license_plate", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string license_plate
		{
			get
			{
				return this._license_plate;
			}
			set
			{
				if ((this._license_plate != value))
				{
					this.Onlicense_plateChanging(value);
					this.SendPropertyChanging();
					this._license_plate = value;
					this.SendPropertyChanged("license_plate");
					this.Onlicense_plateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_id", DbType="Int")]
		public System.Nullable<int> vehicle_id
		{
			get
			{
				return this._vehicle_id;
			}
			set
			{
				if ((this._vehicle_id != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvehicle_idChanging(value);
					this.SendPropertyChanging();
					this._vehicle_id = value;
					this.SendPropertyChanged("vehicle_id");
					this.Onvehicle_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="Int NOT NULL")]
		public int employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hourly_rates_id", DbType="Int NOT NULL")]
		public int hourly_rates_id
		{
			get
			{
				return this._hourly_rates_id;
			}
			set
			{
				if ((this._hourly_rates_id != value))
				{
					if (this._HourlyRate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onhourly_rates_idChanging(value);
					this.SendPropertyChanging();
					this._hourly_rates_id = value;
					this.SendPropertyChanged("hourly_rates_id");
					this.Onhourly_rates_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime_in", DbType="DateTime NOT NULL")]
		public System.DateTime datetime_in
		{
			get
			{
				return this._datetime_in;
			}
			set
			{
				if ((this._datetime_in != value))
				{
					this.Ondatetime_inChanging(value);
					this.SendPropertyChanging();
					this._datetime_in = value;
					this.SendPropertyChanged("datetime_in");
					this.Ondatetime_inChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetime_out", DbType="DateTime NOT NULL")]
		public System.DateTime datetime_out
		{
			get
			{
				return this._datetime_out;
			}
			set
			{
				if ((this._datetime_out != value))
				{
					this.Ondatetime_outChanging(value);
					this.SendPropertyChanging();
					this._datetime_out = value;
					this.SendPropertyChanged("datetime_out");
					this.Ondatetime_outChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount_to_pay", DbType="Decimal(10,2) NOT NULL")]
		public decimal amount_to_pay
		{
			get
			{
				return this._amount_to_pay;
			}
			set
			{
				if ((this._amount_to_pay != value))
				{
					this.Onamount_to_payChanging(value);
					this.SendPropertyChanging();
					this._amount_to_pay = value;
					this.SendPropertyChanged("amount_to_pay");
					this.Onamount_to_payChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_ParkingData", Storage="_Employee", ThisKey="employee_id", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.ParkingDatas.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.ParkingDatas.Add(this);
						this._employee_id = value.id;
					}
					else
					{
						this._employee_id = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HourlyRate_ParkingData", Storage="_HourlyRate", ThisKey="hourly_rates_id", OtherKey="id", IsForeignKey=true)]
		public HourlyRate HourlyRate
		{
			get
			{
				return this._HourlyRate.Entity;
			}
			set
			{
				HourlyRate previousValue = this._HourlyRate.Entity;
				if (((previousValue != value) 
							|| (this._HourlyRate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HourlyRate.Entity = null;
						previousValue.ParkingDatas.Remove(this);
					}
					this._HourlyRate.Entity = value;
					if ((value != null))
					{
						value.ParkingDatas.Add(this);
						this._hourly_rates_id = value.id;
					}
					else
					{
						this._hourly_rates_id = default(int);
					}
					this.SendPropertyChanged("HourlyRate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_ParkingData", Storage="_Vehicle", ThisKey="vehicle_id", OtherKey="id", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.ParkingDatas.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.ParkingDatas.Add(this);
						this._vehicle_id = value.id;
					}
					else
					{
						this._vehicle_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle")]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _vehicle_type_id;
		
		private int _member_id;
		
		private string _license_plate;
		
		private string _notes;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<ParkingData> _ParkingDatas;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<VehicleType> _VehicleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onvehicle_type_idChanging(int value);
    partial void Onvehicle_type_idChanged();
    partial void Onmember_idChanging(int value);
    partial void Onmember_idChanged();
    partial void Onlicense_plateChanging(string value);
    partial void Onlicense_plateChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public Vehicle()
		{
			this._ParkingDatas = new EntitySet<ParkingData>(new Action<ParkingData>(this.attach_ParkingDatas), new Action<ParkingData>(this.detach_ParkingDatas));
			this._Member = default(EntityRef<Member>);
			this._VehicleType = default(EntityRef<VehicleType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vehicle_type_id", DbType="Int NOT NULL")]
		public int vehicle_type_id
		{
			get
			{
				return this._vehicle_type_id;
			}
			set
			{
				if ((this._vehicle_type_id != value))
				{
					if (this._VehicleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onvehicle_type_idChanging(value);
					this.SendPropertyChanging();
					this._vehicle_type_id = value;
					this.SendPropertyChanged("vehicle_type_id");
					this.Onvehicle_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_member_id", DbType="Int NOT NULL")]
		public int member_id
		{
			get
			{
				return this._member_id;
			}
			set
			{
				if ((this._member_id != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmember_idChanging(value);
					this.SendPropertyChanging();
					this._member_id = value;
					this.SendPropertyChanged("member_id");
					this.Onmember_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_license_plate", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string license_plate
		{
			get
			{
				return this._license_plate;
			}
			set
			{
				if ((this._license_plate != value))
				{
					this.Onlicense_plateChanging(value);
					this.SendPropertyChanging();
					this._license_plate = value;
					this.SendPropertyChanged("license_plate");
					this.Onlicense_plateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="VarChar(200)")]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_ParkingData", Storage="_ParkingDatas", ThisKey="id", OtherKey="vehicle_id")]
		public EntitySet<ParkingData> ParkingDatas
		{
			get
			{
				return this._ParkingDatas;
			}
			set
			{
				this._ParkingDatas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Vehicle", Storage="_Member", ThisKey="member_id", OtherKey="id", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._member_id = value.id;
					}
					else
					{
						this._member_id = default(int);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleType_Vehicle", Storage="_VehicleType", ThisKey="vehicle_type_id", OtherKey="id", IsForeignKey=true)]
		public VehicleType VehicleType
		{
			get
			{
				return this._VehicleType.Entity;
			}
			set
			{
				VehicleType previousValue = this._VehicleType.Entity;
				if (((previousValue != value) 
							|| (this._VehicleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleType.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._VehicleType.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._vehicle_type_id = value.id;
					}
					else
					{
						this._vehicle_type_id = default(int);
					}
					this.SendPropertyChanged("VehicleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ParkingDatas(ParkingData entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_ParkingDatas(ParkingData entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
	}
}
#pragma warning restore 1591
